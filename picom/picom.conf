#################################
#             Shadows           #
#################################

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
# Can be set per-window using rules.
#
# Default: false
shadow = true;

# The blur radius for shadows, in pixels.
#
# Default: 12
shadow-radius = 15;

# The opacity of shadows.
#
# Range: 0.0 - 1.0
# Default: 0.75
shadow-opacity = 0.8;

# The left offset for shadows, in pixels.
#
# Default: -15
shadow-offset-x = -10;

# The top offset for shadows, in pixels.
#
# Default: -15
shadow-offset-y = -10;

# Hex string color value of shadow. Formatted like "#RRGGBB", e.g. "#C0FFEE".
#
# Default: #000000
shadow-color = "#000000";
# Specify a list of conditions of windows that should have no shadow.
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@"
];

# Specify a list of conditions of windows that should have no shadow painted over, such as a dock window.
# clip-shadow-above = []

# Crop shadow of a window fully on a particular monitor to that monitor. This is
# currently implemented using the X RandR extension.
# crop-shadow-to-monitor = false


#################################
#           Fading              #
#################################


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
fade-in-step = 0.03;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
fade-out-step = 0.03;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# fade-exclude = []

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################


# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 1
inactive-opacity = 0.8;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
frame-opacity = 0.7;

# Enable frame opacity for colors that match the frame
# frame-opacity-for-same-colors = true;

# Tolerance for similar colors (0 exact match, 1 all colors, default 0.5)
# frame-opacity-for-same-colors-tolerance = 0.5;

# Make different colors opaque by a factor of x (default 5)
# frame-opacity-for-same-colors-multiplier = 5;

# Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
 active-opacity = 0.9;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should never be considered focused.
# focus-exclude = []
focus-exclude = [ "class_g = 'Cairo-clock'" ];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
 opacity-rule = [ "80:class_g = 'URxvt'",
 "80:class_g = 'Alacritty'",
 "80:class_g    = 'Code'",
 "80:class_g     = 'Brave-browser'",
 "70:class_g     = 'thunar' ",
 
  ];


#################################
#           Corners             #
#################################

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 5

# Exclude conditions for rounded corners.
rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'"
];


#################################
#     Background-Blurring       #
#################################


blur:{
    method = "dual_kawase";
    size = 12;
    deviation = 5;
    strength = 5;
    };  


 blur-background = true


blur-kern = "3x3box";



blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "_GTK_FRAME_EXTENTS@"
];


backend = "glx";


dithered-present = false;


vsync = true;


mark-wmwin-focused = true;


mark-ovredir-focused = true;


detect-rounded-corners = true;


detect-client-opacity = true;


detect-transient = true;

use-damage = true;

log-level = "warn";

wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};



#################################
#       Animation Settings      #
#################################

animations = (
{
    triggers = [ "geometry" ];
	preset = "geometry-change";
},
{
	triggers = [ "close", "hide" ];
	preset = "disappear";
},
{
    triggers = ["open", "show"];
    preset = "appear";
},
# {
#     triggers = ["workspace-out"];
#     offset-y = {
#         timing = "0.2s cubic-bezier(0.21, 0.02, 0.76, 0.36)";
#         start = "0";
#         end = "- window-height / 2";
#     };
#     shadow-offset-y = "offset-y";
#     opacity = {
#         timing = "0.2s linear";
#         start = "window-raw-opacity-before";
#         end = "window-raw-opacity";
#     };
#     blur-opacity = "0";
#     shadow-opacity = "opacity";
# },
# {
#     triggers = ["workspace-out-inverse"];
#     offset-y = {
#         timing = "0.2s cubic-bezier(0.21, 0.02, 0.76, 0.36)";
#         start = "0";
#         end = "window-height / 2";
#     };
#     shadow-offset-y = "offset-y";
#     opacity = {
#         timing = "0.2s linear";
#         start = "window-raw-opacity-before";
#         end = "window-raw-opacity";
#     };
#     blur-opacity = "0";
#     shadow-opacity = "opacity";
# },
)
